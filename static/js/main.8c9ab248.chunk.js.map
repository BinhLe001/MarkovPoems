{"version":3,"sources":["views/Visualize.js","views/Explore.js","App.js","serviceWorker.js","index.js"],"names":["Visualize","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLengthChanged","length","setState","selectedLength","onSelectionChanged","name","selectedSection","state","plotContent","plotName","_this2","react_default","a","createElement","className","src","alt","onClick","React","Component","Explore","onNumWordsChange","e","numWords","target","value","generatePoem","count","isNaN","alert","chain","entireBookChain","part1Chain","part2Chain","part3Chain","thresholdChain","word1","keys","Math","floor","random","message","charAt","toUpperCase","slice","split","word2","currentPoem","error","console","log","poemWords","onChange","App","src_views_Visualize","src_views_Explore","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c9ab248.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Visualize.css\";\n\nclass Visualize extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSection: \"\",\n      selectedLength: \"\"\n    };\n  }\n\n  onLengthChanged = length => {\n    this.setState({\n      selectedLength: length\n    });\n  };\n\n  onSelectionChanged = name => {\n    this.setState({\n      selectedSection: name\n    });\n  };\n\n  render() {\n    let plotContent;\n    let plotName;\n    if (this.state.selectedLength === \"\" || this.state.selectedSection === \"\") {\n      plotContent = (\n        <div className=\"Visualize-info\">Select parameters to show plot...</div>\n      );\n    } else {\n      if (this.state.selectedLength === \"All Lengths\") {\n        if (this.state.selectedSection === \"Entire Book\") {\n          plotName = \"BookFreq.png\";\n        }\n        if (this.state.selectedSection === \"Threshold\") {\n          plotName = \"ThresholdFreq.png\";\n        }\n        if (this.state.selectedSection === \"Part I\") {\n          plotName = \"Part1Freq.png\";\n        }\n        if (this.state.selectedSection === \"Part II\") {\n          plotName = \"Part2Freq.png\";\n        }\n        if (this.state.selectedSection === \"Part III\") {\n          plotName = \"Part3Freq.png\";\n        }\n      } else if (this.state.selectedLength === \"At Least 5\") {\n        if (this.state.selectedSection === \"Entire Book\") {\n          plotName = \"BookLengthFreq.png\";\n        }\n        if (this.state.selectedSection === \"Threshold\") {\n          plotName = \"ThresholdLengthFreq.png\";\n        }\n        if (this.state.selectedSection === \"Part I\") {\n          plotName = \"Part1LengthFreq.png\";\n        }\n        if (this.state.selectedSection === \"Part II\") {\n          plotName = \"Part2LengthFreq.png\";\n        }\n        if (this.state.selectedSection === \"Part III\") {\n          plotName = \"Part3LengthFreq.png\";\n        }\n      }\n      plotContent = (\n        <img\n          src={plotName}\n          className=\"Visualize-plot\"\n          alt=\"plot of word frequencies\"\n        />\n      );\n    }\n\n    return (\n      <div className=\"Visualize\">\n        <div className=\"Visualize-title\">\n          Visualize the Most Frequently Used Words throughout the Book\n        </div>\n        <div className=\"Visualize-section\">\n          Section:\n          <div className=\"Visualize-selections\">\n            <div\n              className={\n                this.state.selectedSection === \"Entire Book\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onSelectionChanged(\"Entire Book\")}\n            >\n              Entire Book\n            </div>\n            <div\n              className={\n                this.state.selectedSection === \"Threshold\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onSelectionChanged(\"Threshold\")}\n            >\n              Threshold\n            </div>\n            <div\n              className={\n                this.state.selectedSection === \"Part I\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onSelectionChanged(\"Part I\")}\n            >\n              Part I\n            </div>\n            <div\n              className={\n                this.state.selectedSection === \"Part II\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onSelectionChanged(\"Part II\")}\n            >\n              Part II\n            </div>\n            <div\n              className={\n                this.state.selectedSection === \"Part III\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onSelectionChanged(\"Part III\")}\n            >\n              Part III\n            </div>\n          </div>\n        </div>\n        <div className=\"Visualize-parameter\">\n          Word Length:\n          <div className=\"Visualize-lengths\">\n            <div\n              className={\n                this.state.selectedLength === \"All Lengths\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onLengthChanged(\"All Lengths\")}\n            >\n              All Lengths\n            </div>\n            <div\n              className={\n                this.state.selectedLength === \"At Least 5\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onLengthChanged(\"At Least 5\")}\n            >\n              At Least 5 Letters\n            </div>\n          </div>\n        </div>\n        <div className=\"Visualize-bottom\">{plotContent}</div>\n      </div>\n    );\n  }\n}\n\nexport default Visualize;\n","import React from \"react\";\nimport \"./Explore.css\";\nimport entireBookChain from \"../chains/entireBookChain.json\";\nimport part1Chain from \"../chains/part1Chain.json\";\nimport part2Chain from \"../chains/part2Chain.json\";\nimport part3Chain from \"../chains/part3Chain.json\";\nimport thresholdChain from \"../chains/thresholdChain.json\";\n\nclass Explore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSection: \"\",\n      numWords: 50,\n      currentPoem: \"\"\n    };\n  }\n\n  onNumWordsChange = e => {\n    this.setState({\n      numWords: e.target.value\n    });\n  };\n\n  onSelectionChanged = name => {\n    this.setState({\n      selectedSection: name\n    });\n  };\n\n  generatePoem = count => {\n    try {\n      if (isNaN(count)) {\n        alert(\"Please enter a valid number.\");\n      } else {\n        if (this.state.selectedSection === \"\") {\n          alert(\"Please select a section.\");\n        } else {\n          let chain = entireBookChain;\n          if (this.state.selectedSection === \"Part I\") {\n            chain = part1Chain;\n          }\n          if (this.state.selectedSection === \"Part II\") {\n            chain = part2Chain;\n          }\n          if (this.state.selectedSection === \"Part III\") {\n            chain = part3Chain;\n          }\n          if (this.state.selectedSection === \"Threshold\") {\n            chain = thresholdChain;\n          }\n\n          let word1 = Object.keys(chain)[\n            Math.floor(Math.random() * Object.keys(chain).length)\n          ];\n          let message = word1.charAt(0).toUpperCase() + word1.slice(1);\n\n          while (message.split(\" \").length < count) {\n            let word2 =\n              chain[word1][\n                Math.floor(Math.random() * Object.keys(chain[word1]).length)\n              ];\n            message += \" \" + word2;\n            word1 = word2;\n          }\n\n          this.setState({\n            currentPoem: message\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      this.generatePoem(this.state.numWords);\n    }\n  };\n\n  render() {\n    let poemWords = this.state.currentPoem;\n    if (this.state.currentPoem === \"\") {\n      poemWords = (\n        <div className=\"poem-info\">\n          Select parameters and click Generate Poem to get started...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Explore\">\n        <div className=\"Explore-title\">\n          Explore Markov Model Poem Generation Based on Vuong's Style\n        </div>\n        <div className=\"Explore-section\">\n          Section:\n          <div className=\"Explore-selections\">\n            <div\n              className={\n                this.state.selectedSection === \"Entire Book\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onSelectionChanged(\"Entire Book\")}\n            >\n              Entire Book\n            </div>\n            <div\n              className={\n                this.state.selectedSection === \"Threshold\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onSelectionChanged(\"Threshold\")}\n            >\n              Threshold\n            </div>\n            <div\n              className={\n                this.state.selectedSection === \"Part I\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onSelectionChanged(\"Part I\")}\n            >\n              Part I\n            </div>\n            <div\n              className={\n                this.state.selectedSection === \"Part II\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onSelectionChanged(\"Part II\")}\n            >\n              Part II\n            </div>\n            <div\n              className={\n                this.state.selectedSection === \"Part III\"\n                  ? \"selected\"\n                  : \"selection\"\n              }\n              onClick={() => this.onSelectionChanged(\"Part III\")}\n            >\n              Part III\n            </div>\n          </div>\n        </div>\n        <div className=\"Explore-words\">\n          <div className=\"Words-left\">\n            <div className=\"Words-label\">Number of Words:</div>\n            <input\n              className=\"Words-input\"\n              value={this.state.numWords}\n              onChange={e => this.onNumWordsChange(e)}\n            />\n          </div>\n          <div\n            className=\"Words-submit\"\n            onClick={() => this.generatePoem(this.state.numWords)}\n          >\n            Generate Poem\n          </div>\n        </div>\n        <div className=\"Explore-poem\">{poemWords}</div>\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import React from \"react\";\nimport \"./App.css\";\nimport Visualize from \"./views/Visualize\";\nimport Explore from \"./views/Explore\";\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          Computational Text Analysis: Night Sky With Exit Wounds by Ocean Vuong\n        </div>\n        <div className=\"App-body\">\n          <div className=\"App-view\">\n            <Visualize />\n          </div>\n          <div className=\"App-view\">\n            <Explore />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}